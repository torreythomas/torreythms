{"version":3,"sources":["images/img1.png","images/img2.png","images/hangman.png","images/afterthestorm.png","images/refulgence.png","images/countriesapi.png","images/IMG_1660.jpeg","Scroll.js","Projects/Projects.js","Carousel/ImageComp.js","Carousel/slider.js","Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Scroll","props","style","overflowY","height","children","Project","className","href","src","require","class","ImgComp","display","justifyContent","alignItems","margin","padding","alt","width","Slider","sliderArr","i1","i2","useState","x","setX","map","item","index","key","transform","id","onClick","console","log","length","Home","color","App","to","path","exact","component","Projects","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a137a4a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img1.d6b8b694.png\";","module.exports = __webpack_public_path__ + \"static/media/img2.f721a814.png\";","module.exports = __webpack_public_path__ + \"static/media/hangman.81a3c35b.png\";","module.exports = __webpack_public_path__ + \"static/media/afterthestorm.b8548207.png\";","module.exports = __webpack_public_path__ + \"static/media/refulgence.4c184386.png\";","module.exports = __webpack_public_path__ + \"static/media/countriesapi.0ed71ae3.png\";","module.exports = __webpack_public_path__ + \"static/media/IMG_1660.241dd605.jpeg\";","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{             \n            overflowY: 'scroll',\n            height: '90vh'\n        }}>\n\n\n        {props.children}\n        </div>\n    )\n    \n}\n\nexport default Scroll; ","import React from 'react';\nimport './Projects.css';\nimport 'tachyons'\nimport Scroll from '../Scroll'\n\nconst Project = () => {\n\n    return (\n<div className=\"tl pa3 ma3 projects-div\">\n\n  <div className=\"imgs\">\n<Scroll>\n <a href=\"https://torreythomas.github.io/Hangman/\"  ><img className=\"grow shadow\"  src={require('../images/hangman.png')}/></a>\n <h2> Hangman</h2>\n <p className=\"tl ma2 pa3\"> \n \n The Hangman project was the first project that I made while at General Assembly. I used HTML, CSS, and Javascript to create a Hangman game. User's can enter any letter and make up to five guesses to guess the spooky halloween-themed word. If they guess correctly, they will recieve a win in the win count. If not, they will get to guess a new word. I enjoyed working on this application and testing my javascript abilities. Some current fixes include adding some responsive design as well as sharpening up the Javascript code to fix minor lags in the wrong guesses column.\n \n\n </p>\n<div className=\"flex justify-center ma2 pa3\">\n <a className=\" project-icons\" href=\"https://github.com/torreythomas/Hangman\"> <i class=\"fab fa-github-square\"></i> </a>\n<a  className=\"  project-icons\" href=\"https://medium.com/@torreythms/spooky-halloween-hangman-d0cf2d42feaa\"><i class=\"fab fa-medium\"></i></a>\n</div>\n\n\n\n <a href=\"https://torreythomas.github.io/AfterTheStorm/\"><img className=\"grow shadow\"  src={require('../images/afterthestorm.png')}/></a>\n<h2> After the Storm</h2>\n <p className=\"tl ma2 pa3\"> \n \nAfter the Storm is a start-up application website that I made using Bootstrap and CSS. The purpose of this project was to focus on using CSS and Bootstrap to sharpen my CSS skills wit flexbox and grid. I liked this application a lot because it allowed me to begin to open my mind to the creative side of coding and to think about what I would actually want a personal site to look like. I seek to create more projects that resonate with my personal values and this project influenced me to create Refulgence, a larger project that I created.\n\n </p>\n\n <div className=\"flex justify-center ma2 pa3\">\n <a className=\" project-icons\" href=\"https://torreythomas.github.io/AfterTheStorm/\"> <i class=\"fab fa-github-square\"></i> </a></div>\n\n\n\n <a href=\"https://refulgence.netlify.app//\"><img className=\"grow shadow\"  src={require('../images/refulgence.png')}/></a>\n\n  <h2> Refulgence</h2>\n\n  <p className=\"tl ma2 pa3\"> \n \n  Refulgence is a fully front-end application made with React, SCSS, and Bootstrap. With only 3 days to complete the site to the best of my ability, I sought to challenge myself to work in a real-world type of environment with hard deadlines. I really enjoyed creating this application as it allowed me to practice making deployments, creating a smooth workflow, and utilizing time management skills and online resources to help me finish any issues without just copy and pasting code. The purpose of this project was to challenge me mentally to skillfully to complete what a real-world website looks like, as opposed to making small side projects.\n \n  </p>\n\n  <div className=\"flex justify-center ma2 pa3\">\n <a className=\" project-icons\" href=\"https://github.com/torreythomas/refulgence\"> <i class=\"fab fa-github-square\"></i> </a>\n</div>\n\n\n\n<a href=\"https://fathomless-plateau-83900.herokuapp.com/countries\"><img className=\"grow shadow\" src={require('../images/countriesapi.png')}/></a> \n <h2> Countries API </h2>\n <p className=\"tl ma2 pa3\"> \n \nThe Countries API is a REST API with create,update,read,and delete functionalities. Utilizing MongoDB, Atlas, and deployed with Heroku, this API was created to shift my focus from what was previously only front-end oriented to a back-end state of mind. This created the building blocks of my understanding of fetching data from API's and utilizing the back-end to store user data and information as well.\n </p>\n\n <div className=\" proj-icons flex justify-center ma2 pa3\">\n <a className=\" project-icons\" href=\"https://github.com/torreythomas/countriesAPI\"> <i class=\"fab fa-github-square\"></i> </a>\n<a  className=\"  project-icons\" href=\"https://medium.com/@torreythms/countries-api-374a6a7cdb41\"><i class=\"fab fa-medium\"></i></a>\n</div>\n\n\n\n\n  </Scroll>\n  </div>\n  </div>\n    )\n\n\n}\n\n\nexport default Project;","import React from 'react';\n\n\nfunction ImgComp({ src }) {\n\n    let imgStyles={\n        width: 70+\"%\",\n        height: \"auto\"\n    }\n\n    let centerStyle={\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: 30+\"px\",\n        padding: 10+\"px\"\n    }\n\n\n    return(\n        <div className=\"center-img\" style={centerStyle}>\n<img src={src} alt=\"slide-img\" style={imgStyles}></img>\n</div>\n    ) \n\n}\n\nexport default ImgComp;","import React, {useState} from 'react';\nimport './slider.scss'\nimport ImgComp from \"./ImageComp\";\nimport i1 from '../images/img1.png'\nimport i2 from '../images/img2.png'\n\n\nfunction Slider() {\nlet sliderArr = [<ImgComp src={i1}/>,\n<ImgComp src={i2}/>,] \n\n\nconst [x, setX] = useState(0)\nconst goLeft=()=> {\n    console.log(x);\n    x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100);\n};\nconst goRight=()=> {\n    console.log(x);\n    x === -100*(sliderArr.length - 1) ? setX(0) : setX(x-100);\n};\n\n\nreturn (\n    <div className=\"slider\">\n        {\n        sliderArr.map((item,index) =>{\n            return(\n                <div key={index} className=\"slide\"  style={{transform: `translateX(${x}%)`}}  >\n                    {item}\n                </div> \n            );\n        })}\n        <button id=\"goLeft\"  onClick={goLeft} > <i class=\"fas fa-chevron-left\"></i> </button>\n        <button id=\"goRight\"   onClick={goRight}> <i class=\"fas  fa-chevron-right\"></i> </button>\n    </div>\n);\n}\nexport default Slider;","import React from 'react';\nimport Slider from '../Carousel/slider'\n\n\n\nconst Home = () => {\n\n    return (\n<div className=\"tl pa3 ma3\">\n  <h1> Torrey Thomas. </h1>\n  <h2 > Full-Stack Web Developer. </h2>\n  <p> \n\nA Full-Stack Web Developer that values pushing the boundaries of expectation and ability. I not only desire to help assist clients in achieving their goals on the web, but to go beyond them. A natural people person with a proactive mindset, I love looking at the bright-side and contributing to the overall success of clients, businesses, and teams that I work with.\n  </p>\n  <p> When I'm not coding, I enjoy spending time with family, reading, watching \"how to be productive\" videos on Youtube, and singing praise songs too loudly. </p>\n  <p> <em> I'm currently looking for an outstanding position where I can make an impact while learning and growing in my expertise, experience, and knowledge. </em></p>\n  <p className='tl ma0 pa0' style={{color:\"yellow\"}}> Current Skills:\n\n <em> HTML | CSS | Javascript | MongoDB | Express | SASS | Responsive Design | React | Bootstrap | Node.js | AJAX</em>\n  \n  \n  \n</p>\n  <div className=\" flex justify-center slider-div\">\n\n  <Slider/>\n  </div>\n  </div>\n    )\n\n\n}\n\n\nexport default Home;","import React from 'react';\nimport './App.css';\nimport { Link, Route } from \"react-router-dom\";\nimport Projects from './Projects/Projects'\nimport Home from './Home/Home'\nimport 'tachyons'\n\n\nfunction App() {\n  return (\n    <div className=\"App flex\">\n\n<div className=\"div flex tc\">\n<nav>\n<img src={require('./images/IMG_1660.jpeg')}/>\n\n<div className=\"nav-items\">\n<h2> Torrey Thomas</h2>\n<h3> Full-Stack Web Developer </h3>\n<ul>\n<Link className=\"nav-link   grow  animate__animated animate_Bounce\" to=\"/\"> \n<p> Home </p>\n</Link>\n<Link className=\"nav-link   grow  animate__animated animate_Bounce\" to=\"/projects\"> \n<p> Projects </p>\n</Link>\n<a className=\"nav-link grow animate_animated animate_Bounce\" href=\"https://drive.google.com/file/d/1mKRuEb_fGMRT6XoWM7nZjAxhcVLCKYBD/view?usp=sharing\"> Resumé </a>\n\n</ul>\n\n\n<a href=\"https://www.linkedin.com/in/torrey-thomas-aa545a186/\"><i class=\"fab fa-linkedin-in\"></i></a>\n<a href=\"https://github.com/torreythomas\"><i class=\"fab fa-github\"></i></a>\n<a href=\"https://medium.com/@torreythms\"><i class=\"fab fa-medium-m\"></i></a>\n</div>\n</nav>\n<main>\n<Route path=\"/projects\" exact component={Projects} />\n<Route path=\"/\" exact component={Home} />\n        \n</main>\n\n             \n</div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}